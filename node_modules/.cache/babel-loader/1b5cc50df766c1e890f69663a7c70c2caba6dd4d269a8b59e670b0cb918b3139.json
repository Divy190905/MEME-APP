{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\code\\\\development\\\\React\\\\meme-app\\\\src\\\\pages\\\\Edit.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { useSearchParams } from 'react-router-dom';\nimport Text from \"../components/Text\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPage = () => {\n  _s();\n  const [params] = useSearchParams();\n  const [count, setCount] = useState(0);\n  const addText = () => {\n    setCount(count + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: params.get(\"url\"),\n        width: \"250px\",\n        style: {\n          marginBottom: \"15px\"\n        },\n        alt: \"Meme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), Array.from({\n        length: count\n      }, (_, index) => /*#__PURE__*/_jsxDEV(Text, {}, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: addText,\n      children: \"Add Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"success\",\n      style: {\n        marginLeft: \"15px\"\n      },\n      onClick: e => {},\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(EditPage, \"4CcWOt+bfgvjqqaGvbsdbmS4PBE=\", false, function () {\n  return [useSearchParams];\n});\n_c = EditPage;\nexport default EditPage;\nvar _c;\n$RefreshReg$(_c, \"EditPage\");","map":{"version":3,"names":["React","useState","Button","useSearchParams","Text","jsxDEV","_jsxDEV","EditPage","_s","params","count","setCount","addText","children","src","get","width","style","marginBottom","alt","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","length","_","index","onClick","variant","marginLeft","e","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/code/development/React/meme-app/src/pages/Edit.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport Text from \"../components/Text\";\r\n\r\nconst EditPage = () => {\r\n    const [params] = useSearchParams();\r\n    const [count, setCount] = useState(0);\r\n\r\n    const addText = () => {\r\n        setCount(count + 1);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img \r\n                    src={params.get(\"url\")} \r\n                    width=\"250px\" \r\n                    style={{ marginBottom: \"15px\" }} \r\n                    alt=\"Meme\" \r\n                />\r\n                {\r\n                    Array.from({ length: count }, (_, index) => (\r\n                        <Text key={index} />\r\n                    ))\r\n                }\r\n            </div>\r\n            <Button onClick={addText}>Add Text</Button>\r\n            <Button variant=\"success\" style={{ marginLeft: \"15px\" }} onClick={(e) => {}}>Save</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,eAAe,QAAQ,kBAAkB;AAClD,OAAOC,IAAI,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,CAAC,GAAGN,eAAe,CAAC,CAAC;EAClC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMW,OAAO,GAAGA,CAAA,KAAM;IAClBD,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACvB,CAAC;EAED,oBACIJ,OAAA;IAAAO,QAAA,gBACIP,OAAA;MAAAO,QAAA,gBACIP,OAAA;QACIQ,GAAG,EAAEL,MAAM,CAACM,GAAG,CAAC,KAAK,CAAE;QACvBC,KAAK,EAAC,OAAO;QACbC,KAAK,EAAE;UAAEC,YAAY,EAAE;QAAO,CAAE;QAChCC,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,EAEEC,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAEhB;MAAM,CAAC,EAAE,CAACiB,CAAC,EAAEC,KAAK,kBACnCtB,OAAA,CAACF,IAAI,MAAMwB,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACtB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL,CAAC,eACNjB,OAAA,CAACJ,MAAM;MAAC2B,OAAO,EAAEjB,OAAQ;MAAAC,QAAA,EAAC;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3CjB,OAAA,CAACJ,MAAM;MAAC4B,OAAO,EAAC,SAAS;MAACb,KAAK,EAAE;QAAEc,UAAU,EAAE;MAAO,CAAE;MAACF,OAAO,EAAGG,CAAC,IAAK,CAAC,CAAE;MAAAnB,QAAA,EAAC;IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzF,CAAC;AAEd,CAAC;AAACf,EAAA,CA3BID,QAAQ;EAAA,QACOJ,eAAe;AAAA;AAAA8B,EAAA,GAD9B1B,QAAQ;AA6Bd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}